{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilteer.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValues","datapoints","dataPoint","totalMaximum","max","datapoint","ExpenseChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpense","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","dummyExpenses","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb9884cf.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\" expense-item__description \">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">found no expenses</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"char-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointsValues = props.datapoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointsValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.datapoints.map((datapoint) => (\r\n        <ChartBar\r\n          key={datapoint.label}\r\n          value={datapoint.value}\r\n          maxValue={totalMaximum}\r\n          label={datapoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpenseChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart datapoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpenseChart;\r\n","import React, { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilteer\";\r\nimport ExpenseChart from \"./ExpensesChart\";\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpense = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpenseChart expenses={filteredExpense} />\r\n      <ExpensesList items={filteredExpense} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: \"\",\r\n  //   enteredAmount: \"\",\r\n  //   enteredDate=\"\",\r\n  // });\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    // setUserInput((prevState) => {\r\n    // return {...prevState,enteredTitle:event.target.value}\r\n    // ...userInput,\r\n    //   enteredTitle:event.target.value,\r\n\r\n    // })\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    // setUserInput((prevState) => {\r\n\r\n    // return {...prevState,enteredAmount:event.target.value}\r\n    // ...userInput,\r\n    //   enteredAmount: event.target.value,\r\n    // })\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    //  setUserInput((prevState)=>{\r\n    //  return {...prevState,enteredDate:event.target.value}\r\n    // ...userInput,\r\n    //  enterdDate: event.target.value,\r\n    // })\r\n  };\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n  };\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__controls\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__controls\">\r\n          <label>Amount</label>\r\n          <input\r\n            value={enteredAmount}\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__controls\">\r\n          <label>Date</label>\r\n          <input\r\n            value={enteredDate}\r\n            type=\"date\"\r\n            min=\"2020-1-1\"\r\n            max=\"2021-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst dummyExpenses = [\n  {\n    id: \"e1\",\n    title: \"Books\",\n    amount: 10,\n    date: new Date(2020, 7, 14),\n  },\n\n  { id: \"e2\", title: \"New TV\", amount: 500, date: new Date(2021, 4, 12) },\n  {\n    id: \"e3\",\n    title: \"Health Insurance\",\n    amount: 300,\n    date: new Date(2021, 11, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk\",\n    amount: 50,\n    date: new Date(2021, 9, 12),\n  },\n];\nconst App = () => {\n  const [expenses, setExpenses] = useState(dummyExpenses);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}